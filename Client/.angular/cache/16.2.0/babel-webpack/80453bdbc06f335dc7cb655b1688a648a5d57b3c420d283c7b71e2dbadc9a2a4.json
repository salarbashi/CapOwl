{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let WatchlistComponent = class WatchlistComponent {\n  constructor(client) {\n    this.client = client;\n    this.watchListdata = [];\n    this.model = {};\n  }\n  ngOnInit() {\n    //fill the wathclist\n    this.client.getWatchlistData().subscribe({\n      next: data => {\n        this.watchListdata = data;\n        console.log(this.watchListdata);\n      },\n      error: error => console.log(\"There was an error in receiving the data:\" + error)\n    });\n  }\n  addToWatchList() {}\n  //average function\n  average(data, variable) {\n    if (data.length === 0) {\n      throw new Error(\"Data array is empty\");\n    }\n    const sum = data.reduce((total, item) => total + +item[variable], 0);\n    const average = sum / data.length;\n    return average;\n  }\n};\nWatchlistComponent = __decorate([Component({\n  selector: 'app-watchlist',\n  templateUrl: './watchlist.component.html',\n  styleUrls: ['./watchlist.component.css']\n})], WatchlistComponent);","map":{"version":3,"names":["Component","WatchlistComponent","constructor","client","watchListdata","model","ngOnInit","getWatchlistData","subscribe","next","data","console","log","error","addToWatchList","average","variable","length","Error","sum","reduce","total","item","__decorate","selector","templateUrl","styleUrls"],"sources":["F:\\Projects\\Angular\\FinancialManagerAngular\\src\\app\\watchlist\\watchlist.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FundamentalSummary } from '../_services/Models/fundamentalSummary';\r\nimport { WatchListService } from '../_services/WatchListService';\r\n\n@Component({\n  selector: 'app-watchlist',\n  templateUrl: './watchlist.component.html',\n  styleUrls: ['./watchlist.component.css']\n})\nexport class WatchlistComponent {\n\n  watchListdata: FundamentalSummary[] = [];\n  model: any = {};\n\n  constructor(private client: WatchListService) { }\n\n  ngOnInit(): void {\n    //fill the wathclist\n    this.client.getWatchlistData().subscribe({\n      next: (data) => {\r\n        this.watchListdata = data;\r\n        console.log(this.watchListdata);\r\n      },\r\n      error: (error) => console.log(\"There was an error in receiving the data:\" + error)\r\n    });\n  }\n\n  addToWatchList() { }\n\n  //average function\n  average(data: FundamentalSummary[], variable: keyof FundamentalSummary): number {\r\n    if (data.length === 0) {\r\n      throw new Error(\"Data array is empty\");\r\n    }\r\n\r\n    const sum = data.reduce((total, item) => total + (+item[variable]), 0);\r\n    const average = sum / data.length;\r\n\r\n    return average;\r\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAK7BC,YAAoBC,MAAwB;IAAxB,KAAAA,MAAM,GAANA,MAAM;IAH1B,KAAAC,aAAa,GAAyB,EAAE;IACxC,KAAAC,KAAK,GAAQ,EAAE;EAEiC;EAEhDC,QAAQA,CAAA;IACN;IACA,IAAI,CAACH,MAAM,CAACI,gBAAgB,EAAE,CAACC,SAAS,CAAC;MACvCC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACN,aAAa,GAAGM,IAAI;QACzBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,aAAa,CAAC;MACjC,CAAC;MACDS,KAAK,EAAGA,KAAK,IAAKF,OAAO,CAACC,GAAG,CAAC,2CAA2C,GAAGC,KAAK;KAClF,CAAC;EACJ;EAEAC,cAAcA,CAAA,GAAK;EAEnB;EACAC,OAAOA,CAACL,IAA0B,EAAEM,QAAkC;IACpE,IAAIN,IAAI,CAACO,MAAM,KAAK,CAAC,EAAE;MACrB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;;IAGxC,MAAMC,GAAG,GAAGT,IAAI,CAACU,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAI,CAACC,IAAI,CAACN,QAAQ,CAAE,EAAE,CAAC,CAAC;IACtE,MAAMD,OAAO,GAAGI,GAAG,GAAGT,IAAI,CAACO,MAAM;IAEjC,OAAOF,OAAO;EAChB;CACD;AA/BYd,kBAAkB,GAAAsB,UAAA,EAL9BvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWzB,kBAAkB,CA+B9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}